package com.lexiangbao.tool.generator.mybatis;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import com.lexiangbao.tool.generator.mybatis.entity.GenerateTypes;
import com.lexiangbao.tool.generator.mybatis.entity.Table;
import com.lexiangbao.tool.generator.mybatis.util.DbUtil;

public class CRUDGenerator extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 7743324948850746774L;
	/**
     * Creates new form TableGenerator
     */
    public CRUDGenerator() {
        this.setResizable(false);
        initComponents();
    }
    public static void main(String[] args) {
    	CRUDGenerator.init();
	}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        packageName_input = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        modelType_cb = new javax.swing.JCheckBox();
        mapperType_cb = new javax.swing.JCheckBox();
        daoType_cb = new javax.swing.JCheckBox();
        generate_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
        List<Table>tableList = DbUtil.getTables();
        String data[][]=new String[tableList.size()][3];
        for(int i=0;i<tableList.size();i++){
        	data[i][0]=tableList.get(i).getTableName();
        	data[i][1]=tableList.get(i).getTableComments();
        	data[i][2]=tableList.get(i).getTableType();
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
        		data,
                new String [] {
                    "TableName", "Remark", "TableType"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
//        jTable1.setCellSelectionEnabled(false);
//        jTable1.setEnabled(false);
//        jTable1.setFocusable(false);
        jTable1.setRowSelectionAllowed(true);
        jTable1.setSelectionBackground(new java.awt.Color(255, 204, 153));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel2.setText("包名：");

        packageName_input.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        packageName_input.setText("com.lexiangbao");
        packageName_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("生成：");

        modelType_cb.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        modelType_cb.setSelected(true);
        modelType_cb.setText("Model");
        modelType_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        mapperType_cb.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        mapperType_cb.setSelected(true);
        mapperType_cb.setText("Mapper");
        mapperType_cb.setToolTipText("");
        mapperType_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        daoType_cb.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        daoType_cb.setSelected(true);
        daoType_cb.setText("Dao");
        daoType_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        generate_btn.setText("Generate");
        generate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modelType_cb)
                        .addGap(33, 33, 33)
                        .addComponent(daoType_cb)
                        .addGap(18, 18, 18)
                        .addComponent(mapperType_cb))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(packageName_input, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(generate_btn)))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(packageName_input, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelType_cb)
                    .addComponent(mapperType_cb)
                    .addComponent(daoType_cb))
                .addGap(29, 29, 29)
                .addComponent(generate_btn)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        packageName_input.getAccessibleContext().setAccessibleName("packageName");
        modelType_cb.getAccessibleContext().setAccessibleName("model");
        mapperType_cb.getAccessibleContext().setAccessibleName("mapper");
        daoType_cb.getAccessibleContext().setAccessibleName("dao");

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	
    	int [] rows = jTable1.getSelectedRows();
    	if(rows==null||rows.length<1){
    		JOptionPane.showMessageDialog(null, "请选择要操作的表！");
    		return;
    	}
    	//获取要操作的表
    	for(int i=0;i<rows.length;i++){
    		tableNames.add(jTable1.getValueAt(rows[i], 0).toString());
    	}
    	packageName=packageName_input.getText();
    	if("".equals(packageName)||packageName==null||packageName.isEmpty()){
    		JOptionPane.showMessageDialog(null, "请输入包名！");
    		return;
    	}
    	if(!daoType_cb.isSelected()&&!modelType_cb.isSelected()&&!mapperType_cb.isSelected()){
    		JOptionPane.showMessageDialog(null, "请选择要生成的文件类型");
    		return;
    	}
    	GenerateTypes generateTypes =new GenerateTypes();
    	if(modelType_cb.isSelected()){
    		generateTypes.setIsCreateModel(true);
    	}
    	if(daoType_cb.isSelected()){
    		generateTypes.setIsCreateDao(true);
    	}
    	if(mapperType_cb.isSelected()){
    		generateTypes.setIsCreateMapper(true);
    	}
    	try{
    	Generator.run(packageName, generateTypes, tableNames);
    	}catch(Exception e){
    		System.out.println(e.toString());
    	}
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDGenerator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton generate_btn;
    private javax.swing.JCheckBox modelType_cb;
    private javax.swing.JCheckBox mapperType_cb;
    private javax.swing.JCheckBox daoType_cb;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField packageName_input;
    private List<String>tableNames=new ArrayList<String>();
    private List<Integer>generateTypes=new ArrayList<Integer>();
    private String packageName;
    // End of variables declaration                   
}

